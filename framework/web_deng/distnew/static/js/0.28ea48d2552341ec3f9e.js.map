{"version":3,"sources":["webpack:///./src/store/modules/activity.js"],"names":["activityState","data","1","2","3","4","activityCreate","title","start_time","end_time","rules","activityCreateType","activityCreateRules","done","money","activityCreateRules2","computed","activityCreateTime","get","val","this","set","getTime","methods","activityCreateCall","type","_this","obj","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_json_stringify___default","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default","a","resolve","reject","api","ajax","url","success","$alert","confirmButtonText","callback","action","$router","back","error","activityUpdate","id","activityUpdateType","activityUpdateRules","activityUpdateRules2","activityUpdateTime","activityUpdateCall","_this2","activityShow","activityType","activityShowRes","activityShowCall","_this3","activity","activityList","page","count","total","activityListRes","activityListCall","_this4","list","list_total","activityPauseOrStart","activityPauseOrStartCall","_this5"],"mappings":"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","file":"static/js/0.28ea48d2552341ec3f9e.js","sourcesContent":["const activityType = {\r\n  data: function () {\r\n    return {\r\n      activityType: {\r\n        1: \"充值奖励\",\r\n        2: \"邀请奖励\",\r\n        3: \"成单奖励\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst activityState = {\r\n  data: function () {\r\n    return {\r\n      activityState: {\r\n        1: \"未开始\",\r\n        2: \"活动中\",\r\n        3: \"已结束\",\r\n        4: \"已暂停\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst activityCreate = {\r\n  data: function () {\r\n    return {\r\n      activityCreate: {\r\n        title: \"\",\r\n        start_time: \"\",\r\n        end_time: \"\",\r\n        rules: \"\"\r\n      },\r\n      activityCreateType: \"level\",\r\n      activityCreateRules: [{\r\n        done: \"\",\r\n        money: \"\"\r\n      }],\r\n      activityCreateRules2: [{\r\n        done: \"\",\r\n        money: \"\"\r\n      }]\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    activityCreateTime: {\r\n      get: function (val) {\r\n        return (this.activityCreate.start_time != \"\") ? [this.activityCreate.start_time * 1000, this.activityCreate.end_time * 1000] : \"[]\"\r\n      },\r\n      set: function (val) {\r\n        this.activityCreate.start_time = val[0].getTime() / 1000\r\n        this.activityCreate.end_time = val[1].getTime() / 1000\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    activityCreateCall(type) {\r\n      if (this.activityCreateType == 'level' || this.activityCreateType == 'a_day') {\r\n        var obj = {\r\n          type: this.activityCreateType,\r\n          rules: this.activityCreateRules\r\n        }\r\n        this.activityCreate.rules = JSON.stringify(obj)\r\n      }\r\n      if (this.activityCreateType == 'every') {\r\n        var obj = {\r\n          type: this.activityCreateType,\r\n          rules: this.activityCreateRules2\r\n        }\r\n        this.activityCreate.rules = JSON.stringify(obj)\r\n      }\r\n\r\n\r\n      return new Promise((resolve, reject) => {\r\n        api.ajax({\r\n          type: \"post\",\r\n          url: api.url.activityCreate + '?type=' + type,\r\n          data: this.activityCreate,\r\n          success: data => {\r\n            resolve(data);\r\n            this.$alert(\"添加成功\", \"\", {\r\n              confirmButtonText: \"确定\",\r\n              type: \"success\",\r\n              callback: action => {\r\n                this.$router.back();\r\n              }\r\n            });\r\n          },\r\n          error: data => {\r\n            // reject(456);\r\n          }\r\n        });\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nconst activityUpdate = {\r\n  data: function () {\r\n    return {\r\n      activityUpdate: {\r\n        id: \"\",\r\n        start_time: \"\",\r\n        end_time: \"\",\r\n        title: \"\",\r\n        rules: {}\r\n      },\r\n      activityUpdateType: \"level\",\r\n      activityUpdateRules: [{\r\n        done: \"\",\r\n        money: \"\"\r\n      }],\r\n      activityUpdateRules2: [{\r\n        done: \"\",\r\n        money: \"\"\r\n      }]\r\n    }\r\n  },\r\n  computed: {\r\n    activityUpdateTime: {\r\n      get: function (val) {\r\n        return (this.activityUpdate.start_time != \"\") ? [this.activityUpdate.start_time * 1000, this.activityUpdate.end_time * 1000] : \"[]\"\r\n      },\r\n      set: function (val) {\r\n        this.activityUpdate.start_time = val[0].getTime() / 1000\r\n        this.activityUpdate.end_time = val[1].getTime() / 1000\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    activityUpdateCall(type) {\r\n      if (this.activityUpdateType == 'level' || this.activityUpdateType == 'a_day') {\r\n        var obj = {\r\n          type: this.activityUpdateType,\r\n          rules: this.activityUpdateRules\r\n        }\r\n        this.activityUpdate.rules = JSON.stringify(obj)\r\n      }\r\n      if (this.activityUpdateType == 'every') {\r\n        var obj = {\r\n          type: this.activityUpdateType,\r\n          rules: this.activityUpdateRules2\r\n        }\r\n        this.activityUpdate.rules = JSON.stringify(obj)\r\n      }\r\n\r\n      return new Promise((resolve, reject) => {\r\n        api.ajax({\r\n          type: \"post\",\r\n          url: api.url.activityUpdate + '?type=' + type,\r\n          data: this.activityUpdate,\r\n          success: data => {\r\n            resolve(data);\r\n            this.$alert(\"更新成功\", \"\", {\r\n              confirmButtonText: \"确定\",\r\n              type: \"success\",\r\n              callback: action => {\r\n                this.$router.back();\r\n              }\r\n            });\r\n          },\r\n          error: data => {\r\n            // reject(456);\r\n          }\r\n        });\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nconst activityShow = {\r\n  data: function () {\r\n    return {\r\n      activityShow: {\r\n        id: 0\r\n      },\r\n      activityType: 1,\r\n      activityShowRes: {}\r\n    }\r\n  },\r\n  methods: {\r\n    activityShowCall(type) {\r\n      return new Promise((resolve, reject) => {\r\n        api.ajax({\r\n          type: \"get\",\r\n          url: api.url.activityShow,\r\n          data: this.activityShow,\r\n          success: data => {\r\n            this.activityShowRes = data.activity\r\n            resolve(data);\r\n          },\r\n          error: data => {}\r\n        });\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst activityList = {\r\n  data: function () {\r\n    return {\r\n      activityList: {\r\n        page: 1,\r\n        count: 10,\r\n        total: 1\r\n      },\r\n      activityListRes: []\r\n    }\r\n  },\r\n  methods: {\r\n    activityListCall(type) {\r\n      return new Promise((resolve, reject) => {\r\n        api.ajax({\r\n          type: \"post\",\r\n          url: api.url.activityList + '?type=' + type,\r\n          data: this.activityList,\r\n          success: data => {\r\n            this.activityListRes = data.list\r\n            this.activityList.total = data.list_total\r\n            resolve(data);\r\n          },\r\n          error: data => {\r\n            reject(data)\r\n          }\r\n        });\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nconst activityPauseOrStart = {\r\n  data: function () {\r\n    return {\r\n      activityPauseOrStart: {\r\n        id: 0\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    activityPauseOrStartCall(type) {\r\n      return new Promise((resolve, reject) => {\r\n        api.ajax({\r\n          type: \"post\",\r\n          url: api.url.activityPauseOrStart + '?type=' + type,\r\n          data: this.activityPauseOrStart,\r\n          success: data => {\r\n            resolve(data);\r\n          },\r\n          error: data => {}\r\n        });\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst activity = {\r\n  namespaced: true,\r\n  state: {},\r\n  getters: {\r\n\r\n  },\r\n  mutations: {\r\n\r\n  },\r\n  actions: {}\r\n}\r\n\r\nexport default activity\r\n\r\nexport {\r\n  activityCreate,\r\n  activityUpdate,\r\n  activityShow,\r\n  activityList,\r\n  activityPauseOrStart,\r\n  activityState,\r\n  activityType\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/activity.js"],"sourceRoot":""}